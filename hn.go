package main

import (
	"net/http"
	"io/ioutil"
	"fmt"
	"encoding/json"
	"net"
	"log"
	"io"
	"sync"
)

func main() {
	wg := sync.WaitGroup{}
	wg.Add(1)
	go func() {
		hits := request()
		fmt.Println(len(hits))
		b, err := json.MarshalIndent(hits[0], "", "  ")
		if err == nil {
			fmt.Println(string(b))
		} else {
			fmt.Println("%v", err)
		}
	}()
	wg.Wait()
}

func request() []interface{} {
	res, err := http.Get("http://hn.algolia.com/api/v1/search_by_date?tags=story")
	if err == nil {
		body, _ := ioutil.ReadAll(res.Body)
		var i interface{}
		json.Unmarshal(body, &i)
		m := i.(map[string]interface{})
		//var a AutoGenerated
		//fmt.Printf("%v", m)
		return m["hits"].([]interface{})
	} else {
		return nil
	}
}

const listenAddr = "0.0.0.0:4000"

func tcpEcho() {
	l, err := net.Listen("tcp", listenAddr)
	if err != nil {
		log.Fatal(err)
	}

	for {
		c, err := l.Accept()
		if err != nil {
			log.Fatal(err)
		}
		//fmt.Fprintln(c, "Hello")
		go io.Copy(c, c)
	}
}

func pool() {
}

